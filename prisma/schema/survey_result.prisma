model SurveyResult {
    surveyResultId  BigInt @id @default(autoincrement()) @map("survey_result_id")
    depressionScore Int    @map("depression_score") @db.Integer()
    anxietyScore    Int    @map("anxiety_score") @db.Integer()
    stressScore     Int    @map("stress_score") @db.Integer()
    depressionLevel String @map("depression_level") @db.VarChar(20)
    anxietyLevel    String @map("anxiety_level") @db.VarChar(20)
    stressLevel     String @map("stress_level") @db.VarChar(20)
    userId          BigInt @map("user_id")
    user            User   @relation(fields: [userId], references: [id])
    surveyId        BigInt @map("survey_id")
    survey          Survey @relation(fields: [surveyId], references: [surveyId], onDelete: Cascade)

    createdAt          DateTime             @default(now()) @map("created_at") @db.Timestamptz(3)
    createdBy          String?              @map("created_by") @db.VarChar(36)
    updatedAt          DateTime?            @updatedAt @map("modified_at") @db.Timestamptz(3)
    updatedBy          String?              @map("modified_by") @db.VarChar(36)
    SurveyResultDetail SurveyResultDetail[]

    @@map("survey_result")
}
